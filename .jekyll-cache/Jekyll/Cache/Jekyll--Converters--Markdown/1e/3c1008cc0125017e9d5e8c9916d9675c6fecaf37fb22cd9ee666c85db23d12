I"6<h2 class="no_toc" id="workshop-2-forensics-in-machine-learning-code">Workshop-2: Forensics in Machine Learning Code</h2>

<p class="fs-6 fw-300">Pick Any One (Option-1 or Option-2).</p>

<h2 class="no_toc text-delta" id="table-of-contents">Table of contents</h2>

<ol id="markdown-toc">
  <li><a href="#pick-any-one--option-1-or-option-2" id="markdown-toc-pick-any-one--option-1-or-option-2">Pick Any One  (Option-1 or Option-2)</a>    <ol>
      <li><a href="#option-1-tasks-for-pythonistas" id="markdown-toc-option-1-tasks-for-pythonistas">(Option-1) Tasks for Pythonistas</a></li>
      <li><a href="#option-2-tasks-for-non-python-users" id="markdown-toc-option-2-tasks-for-non-python-users">(Option-2) Tasks for Non-Python Users</a></li>
    </ol>
  </li>
  <li><a href="#sample-input" id="markdown-toc-sample-input">Sample Input</a></li>
  <li><a href="#sample-output" id="markdown-toc-sample-output">Sample Output</a>    <ol>
      <li><a href="#expected-output-for-pythonistas" id="markdown-toc-expected-output-for-pythonistas">Expected Output for Pythonistas:</a></li>
      <li><a href="#expected-output-for-non-python-users" id="markdown-toc-expected-output-for-non-python-users">Expected Output for Non-Python Users:</a>        <ol>
          <li><a href="#ensure-that-your-logging-code-applies-for-both-options-handles-the-following" id="markdown-toc-ensure-that-your-logging-code-applies-for-both-options-handles-the-following">Ensure that your logging code (applies for both options) handles the following:</a></li>
        </ol>
      </li>
    </ol>
  </li>
</ol>

<hr />

<!-- View this site's [_config.yml](https://github.com/pmarsceill/just-the-docs/tree/master/_config.yml) file as an example. -->

<h2 id="pick-any-one--option-1-or-option-2">Pick Any One  (Option-1 or Option-2)</h2>

<h3 id="option-1-tasks-for-pythonistas">(Option-1) Tasks for Pythonistas</h3>

<p>Imagine this scenario: Dolly, a data science specialist at Tennessee Tech. University has written machine learning (ML) code in <code class="language-plaintext highlighter-rouge">ML.py</code>. The output is correct but she just learned about adverserial machine learning, which talks about how ML code can be attacked. She learned that 
ML models are susceptible to security issues:</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">poisoning attacks</code> that are introduced through passing in erroneous dataset files into ML code</li>
  <li><code class="language-plaintext highlighter-rouge">model tricking</code> that are results of models that are being attacked, which gives erroneous results. Incorrect prediction performance is an indicator of ML models being attacked.</li>
</ol>

<p>Use knowledge from the class on what things need to be logged and how. Assist Dolly by writing logging code in the correct locations in <code class="language-plaintext highlighter-rouge">ML.py</code> with comments so that the two above-mentioned issues are logged 
for all provided ML examples. After writing the code, put in comments to justify your code, save <code class="language-plaintext highlighter-rouge">ML.py</code>, and then push it to your repository. Then, use the <code class="language-plaintext highlighter-rouge">Software Forensics Workshop</code> on ILearn to input the link of your repository. You will find the <a href="https://docs.python.org/3/library/logging.html">Python logging utility</a> useful. You donâ€™t have to run the code.</p>

<h3 id="option-2-tasks-for-non-python-users">(Option-2) Tasks for Non-Python Users</h3>

<p>See the attached Zip file. This is a simple Bluetooth Android application written in Java. You need to add logging code in <code class="language-plaintext highlighter-rouge">app/src/main/java/com/mcuhq/simplebluetooth/</code> to assist the developer with forensics. Add Java-based logging code for all methods that you think are important to log in all Java files in <code class="language-plaintext highlighter-rouge">app/src/main/java/com/mcuhq/simplebluetooth/</code>. Use knowledge from the class on what things need to be logged and how.</p>

<p>A few notes:</p>
<ol>
  <li>No need to run code.</li>
  <li>For logging you should use the <a href="https://www.vogella.com/tutorials/Logging/article.html">Java Logging API</a></li>
</ol>

<p>After writing the code, put in comments to justify your code, save <code class="language-plaintext highlighter-rouge">all modified Java files</code>, and then push it to your repository. Then, use the <code class="language-plaintext highlighter-rouge">Software Forensics Workshop</code> on ILearn to input the link of your repository.</p>

<p>Reff: <a href="https://github.com/bauerjj/Android-Simple-Bluetooth-Example">Android Simple Bluetooth Example</a></p>

<h2 id="sample-input">Sample Input</h2>

<p><code class="language-plaintext highlighter-rouge">ML.py</code> for Pythonistas and <code class="language-plaintext highlighter-rouge">app/src/main/java/com/mcuhq/simplebluetooth/</code> for non-Python users</p>

<h2 id="sample-output">Sample Output</h2>

<h3 id="expected-output-for-pythonistas">Expected Output for Pythonistas:</h3>
<p>Logging code with comments, e.g., ML.py will look like as follows.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>iris = datasets.load_iris()
// initiated logging 
logging.basicConfig(filename='app.log', filemode='w', format='%(name)s - %(levelname)s - %(message)s')
</code></pre></div></div>

<h3 id="expected-output-for-non-python-users">Expected Output for Non-Python Users:</h3>
<p>Logging code with comments, e.g., a Java file in <code class="language-plaintext highlighter-rouge">app/src/main/java/com/mcuhq/simplebluetooth/</code> will look like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fileHandler.setFormatter(new MyFormatter());
//setting custom filter for FileHandler
fileHandler.setFilter(new MyFilter());
logger.addHandler(fileHandler);
</code></pre></div></div>

<p>Do the same for all Java files that you think is necessary.</p>

<h4 id="ensure-that-your-logging-code-applies-for-both-options-handles-the-following">Ensure that your logging code (applies for both options) handles the following:</h4>
<ul>
  <li>Timestamp</li>
  <li>Name of output file will be <code class="language-plaintext highlighter-rouge">WORKSHOP2.log</code></li>
  <li>Logging level</li>
</ul>
:ET